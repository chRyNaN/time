import org.gradle.api.publish.maven.internal.artifact.FileBasedMavenArtifact

ext {
    bintrayRepo = 'chrynan'
    libraryGroup = 'com.chrynan.time'
    libraryOwner = 'chrynan'
    libraryRepo = 'time'
    libraryVersion = '0.1.0'
    libraryVersionCode = 1
    libraryVersionDescription = 'First Major Release'
    githubURL = 'https://github.com/chRyNaN/time.git'
}

group rootProject.libraryGroup
version rootProject.libraryVersion

buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61"
        classpath 'digital.wup:android-maven-publish:3.6.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.1"
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'org.jetbrains.dokka'

    dokka {
        outputFormat = 'gfm'
        outputDirectory = "../docs"

        configuration {
            includeNonPublic = false
            skipEmptyPackages = true
            skipDeprecated = true
            reportUndocumented = true
            jdkVersion = 8
            targets = ["JVM", "COMMON"]
        }
    }

    bintray {
        user = project.findProperty("BINTRAY_USER") ?: System.getenv('BINTRAY_USER')
        key = project.findProperty("BINTRAY_KEY") ?: System.getenv('BINTRAY_KEY')
        pkg {
            repo = rootProject.bintrayRepo
            name = rootProject.libraryRepo
            licenses = ['Apache-2.0']
            vcsUrl = rootProject.githubURL
            version {
                name = rootProject.libraryVersion
                desc = rootProject.libraryVersionDescription
                released = new Date()
                vcsTag = rootProject.libraryVersion
            }
        }
    }

    bintrayUpload.doFirst {
        publications = publishing.publications.collect {
            File moduleFile = project.buildDir.toPath()
                    .resolve("publications/${it.name}/module.json").toFile()

            if (moduleFile.exists()) {
                it.artifact(new FileBasedMavenArtifact(moduleFile) {
                    @Override
                    protected String getDefaultExtension() {
                        return "module"
                    }
                })
            }

            it.name
        }
    }

    bintrayUpload.dependsOn publishToMavenLocal
}